- hosts:
    localhost
  connection: local
  tasks:

  - name: delete cert files
    file:
      state: absent
      path: /home/nines/ansible/fgtcert/buffer/

- hosts:
    docker

  vars:
    pk_fp: 'buffer/privkey.pem'
    pk_string: "{{ lookup( 'file', pk_fp) }}" 
    cert_fp: 'buffer/cert.pem'
    cert_string: "{{ lookup( 'file', cert_fp) }}"

  tasks:

  - name: Fetch cert from docker01
    become: yes
    run_once: yes
    fetch: src=/home/strn/docker/nginx-proxy-manager/letsencrypt/live/npm-43/cert.pem dest=buffer/ flat=yes
    when: inventory_hostname == 'docker01'

  - name: Fetch privkey from docker01
    become: yes
    run_once: yes
    fetch: src=/home/strn/docker/nginx-proxy-manager/letsencrypt/live/npm-43/privkey.pem dest=buffer/ flat=yes
    when: inventory_hostname == 'docker01'

  - name: b64 encode cert
    copy:
      dest: 'buffer/cert_b64.pem'
      content: "{{ cert_string }}"
    become: no
    delegate_to: localhost
 
  - name: b64 encode privkey
    copy:
      dest: 'buffer/key_b64.pem'
      content: "{{ pk_string }}"
    become: no
    delegate_to: localhost


- hosts:
    fortigate

  collections:
  - fortinet.fortios
  connection: httpapi
  vars:
   vdom: root
   ansible_httpapi_use_ssl: yes
   ansible_httpapi_validate_certs: no
   ansible_httpapi_port: 444
   private_key_filepath: 'buffer/privkey.pem'
   private_key_string: "{{ lookup( 'file', private_key_filepath) | b64encode }}"
   cert_filepath: 'buffer/cert.pem'
   cert_string: "{{ lookup( 'file', cert_filepath) | b64encode }}"
   
  tasks:

  - name: Configure SSL/SSH protocol options to Factory
    fortios_firewall_ssl_ssh_profile:
      vdom:  "{{ vdom }}"
      state: "present"
      access_token: "{{ fortios_access_token }}"
      firewall_ssl_ssh_profile:
        name: "custom-deep-inspection-out-in"
        server_cert: "Fortinet_Factory"

  - name: Delete old vert
    fortios_vpn_certificate_local:
      vdom: "{{ vdom }}"
      state: "absent"
      access_token: "{{ fortios_access_token }}"
      vpn_certificate_local:
        name: "n9nes"

  - name: upload cert
    ignore_errors: yes
    fortios_monitor:
      enable_log: true
      vdom: "{{ vdom }}"
      access_token: "{{ fortios_access_token }}"
      selector: 'import.vpn-certificate.local'
      params:
          certname: "n9nes"
#          password: ""
          key_file_content: "{{ private_key_string }}"
          file_content: "{{ cert_string }}" 
          scope: vdom
          type: regular

  - name: Configure SSL/SSH protocol options to prod
    fortios_firewall_ssl_ssh_profile:
      vdom:  "{{ vdom }}"
      state: "present"
      access_token: "{{ fortios_access_token }}"
      firewall_ssl_ssh_profile:
        name: "custom-deep-inspection-out-in"
        server_cert: "n9nes"

#  - name: update cert
#    fortios_vpn_certificate_local:
#      vdom:  "{{ vdom }}"
#      access_token: "{{ fortios_access_token }}"
#      state: "present"
#      vpn_certificate_local:
#        range: vdom
#        comments: "test"
#        name: "n9nes_de"
#        private_key: "{{ private_key_string }}"
#        certificate: "{{ cert_string }}"
#        state: "absent"
#        source: "user"
  
#  - name: disable vip policy
#    fortios_firewall_policy:
#      vdom:  "{{ vdom }}"
#      access_token: "{{ fortios_access_token }}"
#      state: "present"
#      firewall_policy:
#        policyid: 16
#        status: disable

#  - name: enable vip policy         
#    fortios_firewall_policy:
#      vdom:  "{{ vdom }}"
#      access_token: "{{ fortios_access_token }}"
#      state: "present"
#      firewall_policy:
#        policyid: 16
#        status: enable


- hosts:
    localhost
  connection: local
  tasks:

  - name: delete cert files
    file:
      state: absent
      path: /home/nines/ansible/fgtcert/buffer/
